{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nconst initialInputValues = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return initialInputValues;\n};\n\nconst useInputNew = applyValidation => {\n  _s();\n\n  const [inputState, dispatch] = React.useReducer();\n  const [value, setValue] = React.useState(\"\");\n  const [isTouched, setIsTouched] = React.useState(false);\n  const isValidInput = applyValidation(value);\n  const hasError = !isValidInput && isTouched;\n\n  const valueChangeHandler = event => {\n    setValue(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value,\n    isValid: isValidInput,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInputNew, \"L1k6J0QkUQOoIQ+YsmtQqvcjwYQ=\");\n\nexport default useInputNew;","map":{"version":3,"sources":["C:/Muneer/React/react-forms/src/hooks/use-input-new.js"],"names":["React","initialInputValues","value","isTouched","inputStateReducer","state","action","useInputNew","applyValidation","inputState","dispatch","useReducer","setValue","useState","setIsTouched","isValidInput","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","isValid"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,EADkB;AAEzBC,EAAAA,SAAS,EAAE;AAFc,CAA3B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOL,kBAAP;AACD,CAFD;;AAIA,MAAMM,WAAW,GAAIC,eAAD,IAAqB;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,KAAK,CAACW,UAAN,EAA/B;AACA,QAAM,CAACT,KAAD,EAAQU,QAAR,IAAoBZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAA1B;AACA,QAAM,CAACV,SAAD,EAAYW,YAAZ,IAA4Bd,KAAK,CAACa,QAAN,CAAe,KAAf,CAAlC;AAEA,QAAME,YAAY,GAAGP,eAAe,CAACN,KAAD,CAApC;AAEA,QAAMc,QAAQ,GAAG,CAACD,YAAD,IAAiBZ,SAAlC;;AAEA,QAAMc,kBAAkB,GAAIC,KAAD,IAAW;AACpCN,IAAAA,QAAQ,CAACM,KAAK,CAACC,MAAN,CAAajB,KAAd,CAAR;AACD,GAFD;;AAIA,QAAMkB,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMO,KAAK,GAAG,MAAM;AAClBT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLZ,IAAAA,KADK;AAELoB,IAAAA,OAAO,EAAEP,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLG,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA9BD;;GAAMd,W;;AAgCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst initialInputValues = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return initialInputValues;\r\n};\r\n\r\nconst useInputNew = (applyValidation) => {\r\n  const [inputState, dispatch] = React.useReducer();\r\n  const [value, setValue] = React.useState(\"\");\r\n  const [isTouched, setIsTouched] = React.useState(false);\r\n\r\n  const isValidInput = applyValidation(value);\r\n\r\n  const hasError = !isValidInput && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value,\r\n    isValid: isValidInput,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInputNew;\r\n"]},"metadata":{},"sourceType":"module"}