{"ast":null,"code":"var _jsxFileName = \"C:\\\\Muneer\\\\React\\\\react-forms\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n  cons;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"input is valid\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n\n    if (event.target.value !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n    console.log(enteredName); //nameInputRef.current.value = \"\"; //NOT ReCOMENDED Approach because dom is directly affected.\n\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  const formClasses = nameInputIsValid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: formClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: nameInputBlurHandler,\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), nameInputIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Input is invalid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"u/tPrIyUg2EIZrWZ0+ZtgMo+WnM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"sources":["C:/Muneer/React/react-forms/src/components/SimpleInput.js"],"names":["useState","useEffect","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEnteredNameTouched","cons","enteredNameIsValid","console","log","nameInputChangeHandler","event","target","value","setEnteredNameIsValid","nameInputBlurHandler","trim","formSubmissionHandler","preventDefault","nameInputIsValid","formClasses"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACM,kBAAD,EAAqBC,qBAArB,IAA8CP,QAAQ,CAAC,KAAD,CAA5D;AAEAQ,EAAAA,IAAI;AACJP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,kBAAJ,EAAwB;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,GAJQ,EAIN,CAACF,kBAAD,CAJM,CAAT;;AAMA,QAAMG,sBAAsB,GAAIC,KAAD,IAAW;AACxCR,IAAAA,cAAc,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;;AAEA,QAAIF,KAAK,CAACC,MAAN,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BC,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;AACF,GAND;;AAQA,QAAMC,oBAAoB,GAAG,MAAM;AACjCV,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIH,WAAW,CAACc,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BF,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACD;AACF,GALD;;AAOA,QAAMG,qBAAqB,GAAIN,KAAD,IAAW;AACvCA,IAAAA,KAAK,CAACO,cAAN;AACAb,IAAAA,qBAAqB,CAAC,IAAD,CAArB;;AACA,QAAIH,WAAW,CAACc,IAAZ,OAAuB,EAA3B,EAA+B;AAC7BF,MAAAA,qBAAqB,CAAC,KAAD,CAArB;AACA;AACD;;AAEDA,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AAEAN,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ,EAVuC,CAYvC;;AACAC,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GAdD;;AAgBA,QAAMgB,gBAAgB,GAAG,CAACZ,kBAAD,IAAuBH,kBAAhD;AACA,QAAMgB,WAAW,GAAGD,gBAAgB,GAChC,sBADgC,GAEhC,cAFJ;AAGA,sBACE;AAAM,IAAA,QAAQ,EAAEF,qBAAhB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEG,WAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,MAFL;AAGE,QAAA,KAAK,EAAElB,WAHT;AAIE,QAAA,MAAM,EAAEa,oBAJV;AAKE,QAAA,QAAQ,EAAEL;AALZ;AAAA;AAAA;AAAA;AAAA,cAFF,EASGS,gBAAgB,iBAAI;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAhED;;GAAMnB,W;;KAAAA,W;AAkEN,eAAeA,WAAf","sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEnteredNameTouched] = useState(false);\n\n  cons\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      console.log(\"input is valid\");\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n\n    if (event.target.value !== \"\") {\n      setEnteredNameIsValid(true);\n    }\n  };\n\n  const nameInputBlurHandler = () => {\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n    }\n  };\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n    setEnteredNameTouched(true);\n    if (enteredName.trim() === \"\") {\n      setEnteredNameIsValid(false);\n      return;\n    }\n\n    setEnteredNameIsValid(true);\n\n    console.log(enteredName);\n\n    //nameInputRef.current.value = \"\"; //NOT ReCOMENDED Approach because dom is directly affected.\n    setEnteredName(\"\");\n  };\n\n  const nameInputIsValid = !enteredNameIsValid && enteredNameTouched;\n  const formClasses = nameInputIsValid\n    ? \"form-control invalid\"\n    : \"form-control\";\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={formClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={enteredName}\n          onBlur={nameInputBlurHandler}\n          onChange={nameInputChangeHandler}\n        />\n        {nameInputIsValid && <p className=\"error-text\">Input is invalid</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"]},"metadata":{},"sourceType":"module"}