{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nconst initialInputValue = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return initialInputValue;\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  const [inputState, dispatch] = useReducer(inputStateReducer, initialInputValue);\n  const valueIsValid = validateValue(inputState.value);\n  const hasError = !valueIsValid && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: 'INPUT',\n      value: event.target.va\n    });\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = () => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n    setEnteredValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInput, \"1N1VZgLXFvrhqW6cMSXQdVqQbsg=\");\n\nexport default useInput;","map":{"version":3,"sources":["C:/Muneer/React/react-forms/src/hooks/use-input.js"],"names":["useReducer","initialInputValue","value","isTouched","inputStateReducer","state","action","useInput","validateValue","inputState","dispatch","valueIsValid","hasError","valueChangeHandler","event","type","target","va","setEnteredValue","inputBlurHandler","setIsTouched","reset","enteredValue","isValid"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,MAAMC,iBAAiB,GAAG;AACxBC,EAAAA,KAAK,EAAE,EADiB;AAExBC,EAAAA,SAAS,EAAE;AAFa,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOL,iBAAP;AACD,CAFD;;AAIA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;AAAA;;AAClC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,UAAU,CACvCI,iBADuC,EAEvCH,iBAFuC,CAAzC;AAKA,QAAMU,YAAY,GAAGH,aAAa,CAACC,UAAU,CAACP,KAAZ,CAAlC;AACA,QAAMU,QAAQ,GAAG,CAACD,YAAD,IAAiBF,UAAU,CAACN,SAA7C;;AAEA,QAAMU,kBAAkB,GAAIC,KAAD,IAAW;AACpCJ,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAE,OAAP;AAAgBb,MAAAA,KAAK,EAACY,KAAK,CAACE,MAAN,CAAaC;AAAnC,KAAD,CAAR;AACAC,IAAAA,eAAe,CAACJ,KAAK,CAACE,MAAN,CAAad,KAAd,CAAf;AACD,GAHD;;AAKA,QAAMiB,gBAAgB,GAAG,MAAM;AAC7BC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFD;;AAIA,QAAMC,KAAK,GAAG,MAAM;AAClBH,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLlB,IAAAA,KAAK,EAAEoB,YADF;AAELC,IAAAA,OAAO,EAAEZ,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLM,IAAAA,gBALK;AAMLE,IAAAA;AANK,GAAP;AAQD,CA/BD;;GAAMd,Q;;AAiCN,eAAeA,QAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nconst initialInputValue = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return initialInputValue;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(\r\n    inputStateReducer,\r\n    initialInputValue\r\n  );\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({type: 'INPUT', value:event.target.va})\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n"]},"metadata":{},"sourceType":"module"}