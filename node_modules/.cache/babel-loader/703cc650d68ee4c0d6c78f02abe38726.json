{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nconst initialInputValues = {\n  value: \"\",\n  isTouched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return initialInputValues;\n};\n\nconst useInputNew = applyValidation => {\n  _s();\n\n  const [inputState, dispatch] = React.useReducer();\n  const isValidInput = applyValidation(inputState.value);\n  const hasError = !isValidInput && inputState.isTouched;\n\n  const valueChangeHandler = event => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const inputBlurHandler = () => {\n    dispatch({\n      type: \"INPUT\",\n      value: event.target.value\n    });\n  };\n\n  const reset = () => {\n    setValue(\"\");\n    setIsTouched(false);\n  };\n\n  return {\n    value,\n    isValid: isValidInput,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\n_s(useInputNew, \"4WfepTkZhf7l4tf1poChiEWf4Jw=\");\n\nexport default useInputNew;","map":{"version":3,"sources":["C:/Muneer/React/react-forms/src/hooks/use-input-new.js"],"names":["React","initialInputValues","value","isTouched","inputStateReducer","state","action","useInputNew","applyValidation","inputState","dispatch","useReducer","isValidInput","hasError","valueChangeHandler","event","type","target","inputBlurHandler","reset","setValue","setIsTouched","isValid"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,EADkB;AAEzBC,EAAAA,SAAS,EAAE;AAFc,CAA3B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOL,kBAAP;AACD,CAFD;;AAIA,MAAMM,WAAW,GAAIC,eAAD,IAAqB;AAAA;;AACvC,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBV,KAAK,CAACW,UAAN,EAA/B;AAEA,QAAMC,YAAY,GAAGJ,eAAe,CAACC,UAAU,CAACP,KAAZ,CAApC;AAEA,QAAMW,QAAQ,GAAG,CAACD,YAAD,IAAiBH,UAAU,CAACN,SAA7C;;AAEA,QAAMW,kBAAkB,GAAIC,KAAD,IAAW;AACpCL,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,OAAR;AAAiBd,MAAAA,KAAK,EAAEa,KAAK,CAACE,MAAN,CAAaf;AAArC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMgB,gBAAgB,GAAG,MAAM;AAC7BR,IAAAA,QAAQ,CAAC;AAAEM,MAAAA,IAAI,EAAE,OAAR;AAAiBd,MAAAA,KAAK,EAAEa,KAAK,CAACE,MAAN,CAAaf;AAArC,KAAD,CAAR;AAED,GAHD;;AAKA,QAAMiB,KAAK,GAAG,MAAM;AAClBC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAC,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAHD;;AAKA,SAAO;AACLnB,IAAAA,KADK;AAELoB,IAAAA,OAAO,EAAEV,YAFJ;AAGLC,IAAAA,QAHK;AAILC,IAAAA,kBAJK;AAKLI,IAAAA,gBALK;AAMLC,IAAAA;AANK,GAAP;AAQD,CA7BD;;GAAMZ,W;;AA+BN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst initialInputValues = {\r\n  value: \"\",\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (state, action) => {\r\n  return initialInputValues;\r\n};\r\n\r\nconst useInputNew = (applyValidation) => {\r\n  const [inputState, dispatch] = React.useReducer();\r\n\r\n  const isValidInput = applyValidation(inputState.value);\r\n\r\n  const hasError = !isValidInput && inputState.isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n  };\r\n\r\n  const inputBlurHandler = () => {\r\n    dispatch({ type: \"INPUT\", value: event.target.value });\r\n\r\n  };\r\n\r\n  const reset = () => {\r\n    setValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value,\r\n    isValid: isValidInput,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInputNew;\r\n"]},"metadata":{},"sourceType":"module"}